//package org.team2.domain;
//
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Controller;
//import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.ResponseBody;
//
//import java.util.List;
//
//@Controller // This means that this class is a Controller
////@RequestMapping(path="/business") // This means URL's start with /demo (after Application path)
//public class RestaurantController {
//    @Autowired // This means to get the bean called userRepository
//    // Which is auto-generated by Spring, we will use it to handle the data
//    private RestaurantRepo restaurantRepo;
//
//
//
//    @GetMapping("/restaurants")
//    public Iterable<Restaurant> findAllRestaurants(){return restaurantRepo.findAll();}
//
//
//
//    @PostMapping(path="/add") // Map ONLY POST Requests
//    public @ResponseBody String addNewRestaurant (@RequestParam(required=false,name="businessName") String businessName
//            , @RequestParam(required=false,name="city") String city, @RequestParam(required=false,name="address") String address, @RequestParam(required=false,name="categories") String categories, @RequestParam(required=false,name="stars") Integer stars, @RequestParam(required=false,name="reviewCount") String reviewCount) {
//        // @ResponseBody means the returned String is the response, not a view name
//        // @RequestParam means it is a parameter from the GET or POST request
//
//        Restaurant n = new Restaurant();
//        n.setName(businessName);
//        n.setCity(city);
//        n.setAddress(address);
//        n.setCategories(categories);
//        n.setStars(stars);
//        restaurantRepo.save(n);
//        return "Saved";
//    }

//    @GetMapping(path="/all")
//    public @ResponseBody Iterable<Restaurant> getAllRestaurants() {
//        // This returns a JSON or XML with the users
//        return restaurantRepo.findAll();
//    }
//}

