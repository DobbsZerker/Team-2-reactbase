package org.team2.domain;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@Controller // This means that this class is a Controller
@RequestMapping(path="/business") // This means URL's start with /demo (after Application path)
public class RestaurantController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private RestaurantRepo restaurantRepo;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewRestaurant (@RequestParam(required=false,name="businessName") String businessName
            , @RequestParam(required=false,name="city") String city, @RequestParam(required=false,name="address") String address, @RequestParam(required=false,name="categories") String categories, @RequestParam(required=false,name="stars") Integer stars, @RequestParam(required=false,name="reviewCount") String reviewCount) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Restaurant n = new Restaurant();
        n.setName(businessName);
        n.setCity(city);
        n.setAddress(address);
        n.setCategories(categories);
        n.setStars(stars);
        restaurantRepo.save(n);
        return "Saved";
    }

    @GetMapping("/restaurant/search/{business_name}")
    public List<Restaurant> searchByBusinessName(@RequestParam(value = "business_name") String business_name){
        return restaurantRepo.findByBusinessName(business_name);
    }
    @GetMapping("/restaurant/search/{city}")
    public List<Restaurant> searchByCity(@RequestParam(value = "city") String city){
        return restaurantRepo.findByCity(city);
    }
    @GetMapping("/restaurant/search/{address}")
    public List<Restaurant> searchByAddress(@RequestParam(value = "address") String address){
        return restaurantRepo.findByAddress(address);
    }
    @GetMapping("/restaurant/search/{stars}")
    public List<Restaurant> searchByStars(@RequestParam(value = "stars") Integer stars){
        return restaurantRepo.findByStars(stars);
    }

    @GetMapping("/restaurant/search/{review_count}")
    public List<Restaurant> searchByReviewCount(@RequestParam(value = "reviewCount") Integer reviewCount){
        return restaurantRepo.findByReviewCount(reviewCount);
    }



    @GetMapping(path="/all")
    public @ResponseBody Iterable<Restaurant> getAllRestaurants() {
        // This returns a JSON or XML with the users
        return restaurantRepo.findAll();
    }
}

